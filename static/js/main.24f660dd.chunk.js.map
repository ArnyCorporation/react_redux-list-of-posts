{"version":3,"sources":["store/actionTypes.js","store/reducer.js","store/configureStore.js","store/actions.js","store/functions/fetchPostsAndUsers.js","store/functions/deletePost.js","components/User/User.jsx","store/functions/deleteComment.js","components/Comment/Comment.jsx","containers/CommentHandler.js","components/CommentsList/CommentsList.jsx","components/Post/Post.jsx","containers/PostHandler.js","components/PostList/PostList.jsx","containers/PostListHandler.js","App.js","serviceWorker.js","index.js"],"names":["ACTION_TYPES","START_LOADING","HANDLE_ERROR","HANDLE_SUCCESS","HANDLE_DELETE_POST","HANDLE_DELETE_COMMENT","initialState","preparedPosts","isLoading","isLoaded","hasError","store","createStore","array","id","state","arguments","length","undefined","action","posts","type","_objectSpread","payload","filter","post","map","item","comments","comment","composeWithDevTools","applyMiddleware","thunk","handleError","handleSuccess","loadPostsAndUsers","dispatch","usersApi","commentsApi","postsApi","Promise","all","fetch","then","_ref","_ref2","Object","slicedToArray","res1","res2","res3","json","_ref3","_ref4","users","fetchPostsAndUsers_objectSpread","user","find","userId","postId","catch","deletePostFromList","itemId","deletePost","User","name","username","email","address","react_default","a","createElement","className","street","suite","city","zipcode","deleteCommentFromPost","ids","Comment","body","onClick","connect","ownProps","CommentsList","CommentHandler","key","Post","components_User_User","concat","title","components_CommentsList_CommentsList","PostsList","props","_useState","useState","_useState2","setPosts","_useState3","_useState4","search","setSearch","useEffect","Fragment","placeholder","onChange","e","target","value","filteredPosts","toLowerCase","includes","PostHandler","PostList","App","PostListHandler","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","render","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.24f660dd.chunk.js","sourcesContent":["const ACTION_TYPES = {\n  START_LOADING: 'START_LOADING',\n  HANDLE_ERROR: 'HANDLE_ERROR',\n  HANDLE_SUCCESS: 'HANDLE_SUCCESS',\n  HANDLE_DELETE_POST: 'HANDLE_DELETE_POST',\n  HANDLE_DELETE_COMMENT: 'HANDLE_DELETE_COMMENT',\n};\n\nexport default ACTION_TYPES;\n","import ACTION_TYPES from './actionTypes';\n\nexport const initialState = {\n  preparedPosts: [],\n  isLoading: false,\n  isLoaded: false,\n  hasError: false,\n};\n\nexport const reducer = (state = initialState, action) => {\n  const posts = state.preparedPosts;\n  const filterComments = (array, id) => (\n    array.map(item => ({\n      ...item,\n      comments: item.comments\n        .filter(comment => comment.id !== id),\n    }))\n  );\n\n  switch (action.type) {\n    case ACTION_TYPES.START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n    case ACTION_TYPES.HANDLE_SUCCESS:\n      return {\n        ...state,\n        preparedPosts: action.payload,\n        isLoaded: true,\n        isLoading: false,\n      };\n    case ACTION_TYPES.HANDLE_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: false,\n      };\n    case ACTION_TYPES.HANDLE_DELETE_POST:\n      return {\n        ...state,\n        preparedPosts: state.preparedPosts\n          .filter(post => post.id !== action.payload),\n      };\n    case ACTION_TYPES.HANDLE_DELETE_COMMENT:\n      return {\n        ...state,\n        preparedPosts: filterComments(posts, action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducer } from './reducer';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nexport default store;\n","import ACTION_TYPES from './actionTypes';\n\nexport const startLoading = () => ({ type: ACTION_TYPES.START_LOADING });\nexport const handleError = () => ({ type: ACTION_TYPES.HANDLE_ERROR });\nexport const handleSuccess = preparedPosts => ({\n  type: ACTION_TYPES.HANDLE_SUCCESS,\n  payload: preparedPosts,\n});\nexport const deletePost = itemId => ({\n  type: ACTION_TYPES.HANDLE_DELETE_POST,\n  payload: itemId,\n});\nexport const deleteComment = itemId => ({\n  type: ACTION_TYPES.HANDLE_DELETE_COMMENT,\n  payload: itemId,\n});\n","import { handleError, startLoading, handleSuccess } from '../actions';\n\nconst loadPostsAndUsers = () => (dispatch) => {\n  const usersApi = 'https://jsonplaceholder.typicode.com/users';\n  const commentsApi = 'https://jsonplaceholder.typicode.com/comments';\n  const postsApi = 'https://jsonplaceholder.typicode.com/posts';\n  dispatch(startLoading());\n\n  function getData() {\n    Promise.all([\n      fetch(postsApi),\n      fetch(usersApi),\n      fetch(commentsApi),\n    ])\n      .then(([res1, res2, res3]) => Promise\n        .all([res1.json(), res2.json(), res3.json()]))\n      .then(([posts, users, comments]) => {\n        const preparedPosts = posts.map(post => ({\n          ...post,\n          user: users.find(user => user.id === post.userId),\n          comments: comments.filter(comment => comment.postId === post.id),\n        }));\n        dispatch(handleSuccess(preparedPosts));\n      })\n      .catch(() => {\n        dispatch(handleError());\n      });\n  }\n  getData();\n};\n\nexport default loadPostsAndUsers;\n","import { deletePost } from '../actions';\n\nconst deletePostFromList = itemId => (dispatch) => {\n  dispatch(deletePost(itemId));\n};\n\nexport default deletePostFromList;\n","import React from 'react';\nimport './User.scss';\n\nfunction User({ user }) {\n  const {\n    name, username, email, address,\n  } = user;\n\n  return (\n    <div className=\"user d-flex flex-column\">\n      <h2>{name}</h2>\n      <p>{username}</p>\n      <p>{email}</p>\n      {address && (\n        <div className=\"user__adress align-self-end mr-3\">\n          <p className=\"user__adress-street font-weight-bold\">{address.street}</p>\n          <p className=\"user__adress-suite font-weight-bold\">{address.suite}</p>\n          <p className=\"user__adress-city font-weight-bold\">{address.city}</p>\n          <p className=\"user__adress-zipcode font-weight-bold\">{address.zipcode}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default User;\n","import { deleteComment } from '../actions';\n\nconst deleteCommentFromPost = ids => (dispatch) => {\n  dispatch(deleteComment(ids));\n};\n\nexport default deleteCommentFromPost;\n","import React from 'react';\nimport './Comment.scss';\n\nfunction Comment({ comment, deleteCommentFromPost }) {\n  const { name, email, body } = comment;\n\n  return (\n    <div\n      className=\"\n        d-flex flex-column\n        border-3 border-success\n        rounded\n        p-3 m-3\"\n    >\n      <button\n        className=\"btn btn-danger align-self-end mb-3\"\n        type=\"button\"\n        onClick={deleteCommentFromPost}\n      >\nX\n      </button>\n      <h4>{name}</h4>\n      <p>{email}</p>\n      <p>{body}</p>\n    </div>\n  );\n}\n\nexport default Comment;\n","import { connect } from 'react-redux';\nimport deleteCommentFromPost from '../store/functions/deleteComment';\nimport Comment from '../components/Comment/Comment';\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  deleteCommentFromPost: () => dispatch(deleteCommentFromPost(ownProps.comment.id)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Comment);\n","import React from 'react';\nimport './CommentsList.scss';\nimport Comment from '../../containers/CommentHandler';\n\nfunction CommentsList({ comments }) {\n  return (\n    <div className=\"comments\">\n      {comments.map(comment => <Comment key={comment.id} comment={comment} />)}\n    </div>\n  );\n}\n\nexport default CommentsList;\n","import React from 'react';\nimport './Post.scss';\nimport User from '../User/User';\nimport CommentsList from '../CommentsList/CommentsList';\n\nfunction Post({ post, deletePostFromList }) {\n  const { user, comments } = post;\n  return (\n    <div\n      className=\"d-flex flex-column\n        border-3 border-warning\n        rounded\n        p-3 m-3\"\n    >\n      <button\n        className=\"btn btn-danger align-self-end m-3\"\n        type=\"button\"\n        onClick={deletePostFromList}\n      >\n        X\n      </button>\n      <User user={user} />\n      <h2 className=\"post__name\">{`Title: ${post.title}`}</h2>\n      <p className=\"post__body\">{`Body: ${post.body}`}</p>\n      <CommentsList comments={comments} />\n    </div>\n  );\n}\n\nexport default Post;\n","import { connect } from 'react-redux';\nimport deletePostFromList from '../store/functions/deletePost';\nimport Post from '../components/Post/Post';\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  deletePostFromList: () => dispatch(deletePostFromList(ownProps.post.id)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Post);\n","import React, { useState, useEffect } from 'react';\nimport Post from '../../containers/PostHandler';\nimport './PostsList.scss';\n\nfunction PostsList(props) {\n  const {\n    preparedPosts, isLoading, hasError, isLoaded,\n  } = props;\n\n  const [posts, setPosts] = useState();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setPosts(preparedPosts);\n  }, [preparedPosts]);\n\n  return (\n    (isLoading && (\n      <div>\n        <p>Loading...</p>\n        <button\n          type=\"button\"\n          onClick={props.loadPostsAndUsers}\n        >\n            Load\n        </button>\n      </div>\n    ))\n    || (hasError && (\n      <p>Error occurred!!!</p>\n    ))\n    || (!isLoaded && (\n      <>\n        <p>No users yet</p>\n        <button\n          type=\"button\"\n          onClick={props.loadPostsAndUsers}\n        >\n                    Load\n        </button>\n      </>\n    ))\n    || (\n      <div className=\"post-list container\">\n        <div className=\"row\">\n          <div className=\"col-12 text-center\">\n            <input\n              id=\"myInput\"\n              className=\"text-center\"\n              type=\"search\"\n              placeholder=\"search please\"\n              onChange={(e) => {\n                if (e.target.value) {\n                  const filteredPosts = preparedPosts\n                    .filter(post => post.title.toLowerCase()\n                      .includes(search.toLowerCase()) || post.body.toLowerCase()\n                      .includes(search.toLowerCase()));\n                  setPosts(filteredPosts);\n                } else {\n                  setPosts(preparedPosts);\n                }\n                setSearch(e.target.value);\n              }\n              }\n              value={search}\n            />\n          </div>\n          {posts.map(post => (\n            <Post key={post.id} post={post} />\n          ))}\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default PostsList;\n","import { connect } from 'react-redux';\nimport loadPostsAndUsers from '../store/functions/fetchPostsAndUsers';\nimport PostList from '../components/PostList/PostList';\n\nconst mapStateToProps = state => ({\n  preparedPosts: state.preparedPosts,\n  isLoading: state.isLoading,\n  isLoaded: state.isLoaded,\n  hasError: state.hasError,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  loadPostsAndUsers: () => dispatch(loadPostsAndUsers()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostList);\n","import React from 'react';\nimport PostList from './containers/PostListHandler';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Redux list of posts</h1>\n      <PostList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost.\n        // Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}